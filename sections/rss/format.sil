% RSS section class: load data/rss.json and render a short list of items
\define[command=rsssection]{
  \sectionbox{
    \sectiontitle{RSS Highlights}
    \lua{
      local path = "data/rss.json"
      local load = SILE.scratch.load_json_file
      if not load then
        SILE.typesetter:typeset("JSON helper not available; ensure \\loaddata ran.")
        return
      end
      local data, err = load(path)
      if not data then
        SILE.typesetter:typeset("Failed to load " .. path .. " (" .. tostring(err) .. ")")
        return
      end

      local items = type(data.items) == "table" and data.items or {}
      if type(items) ~= "table" then
        SILE.typesetter:typeset("Invalid RSS JSON schema (no items).")
        return
      end

      -- Render items in supplied order, grouping by source without reordering
      local current_source = nil
      for idx = 1, #items do
        local it = items[idx] or {}
        local source = tostring(it.source or "Blog")
        if source ~= current_source then
          if current_source ~= nil then
            SILE.call("par")
          end
          SILE.typesetter:typeset(source)
          SILE.call("par")
          current_source = source
        end

        local atitle = tostring(it.title or "(untitled)")
        SILE.typesetter:typeset(atitle)
        SILE.call("par")

        local subs = it.subtitles or {}
        if type(subs) ~= "table" then subs = {} end
        for k = 1, #subs do
          local sub = tostring(subs[k] or "")
          if sub ~= "" then
            SILE.call("Subtle", {}, function()
              SILE.typesetter:typeset(sub)
            end)
            SILE.call("par")
          end
        end
        SILE.call("par")
      end
    }
  }
}
