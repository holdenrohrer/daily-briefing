% RSS section class: load data/rss.json and render a short list of items
\define[command=rsssection]{
  \sectionbox{
    \sectiontitle{RSS Highlights}
    \lua{
      local path = "data/rss.json"
      local load = SILE.scratch.load_json_file
      if not load then
        SILE.typesetter:typeset("JSON helper not available; ensure \\loaddata ran.")
        return
      end
      local data, err = load(path)
      if not data then
        SILE.typesetter:typeset("Failed to load " .. path .. " (" .. tostring(err) .. ")")
        return
      end

      local groups = type(data.groups) == "table" and data.groups or {}
      if type(groups) ~= "table" then
        SILE.typesetter:typeset("Invalid RSS JSON schema (no groups).")
        return
      end

      -- Build a sortable list of groups
      local list = {}
      for _, grp in pairs(groups) do table.insert(list, grp) end

      -- label normalization moved to build step; use grp.source as-is

      -- ordering moved to build step; preserve input order

      -- no sorting here; formatting layer preserves upstream order

      for _, grp in ipairs(list) do
        local label = tostring(grp.source or "Blog")
        SILE.typesetter:typeset(label)
        SILE.call("par")

        local items = type(grp.items) == "table" and grp.items or {}
        for j = 1, #items do
          local it = items[j] or {}
          local atitle = tostring(it.title or "(untitled)")
          SILE.typesetter:typeset(atitle)
          SILE.call("par")

          local subs = it.subtitles or {}
          if type(subs) ~= "table" then subs = {} end
          for k = 1, #subs do
            local sub = tostring(subs[k] or "")
            if sub ~= "" then
              SILE.call("Subtle", {}, function()
                SILE.typesetter:typeset(sub)
              end)
              SILE.call("par")
            end
          end

          -- Separator between articles
          SILE.call("par")
        end

        -- Separator between blogs
        SILE.call("par")
      end
    }
  }
}
